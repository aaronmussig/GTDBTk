# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: actions/checkout@v2
        with:
          path: master

      - uses: actions/checkout@v2
        with:
          ref: gh_pages
          path: gh_pages

      - name: Install Sphinx Requirements
        working-directory: ${{ github.workspace }}/master/docs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y pandoc
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # otherwise build will fail as ref data doesnt exist
      - name: Manually edit config file
        working-directory: ${{ github.workspace }}/master/gtdbtk/config
        run: grep AF_THRESHOLD config.py >  config2.py && mv config2.py config.py

      - name: Make the docs
        working-directory: ${{ github.workspace }}/master/docs
        run: make html

      # Runs a set of commands using the runners shell
      - name: Move the docs
        run: |
          touch master/docs/build/html/.nojekyll
          cp -a master/docs/build/html/. gh_pages/

      - name: commit and upload
        working-directory: ${{ github.workspace }}/gh_pages
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all
          git diff-index --quiet HEAD || git commit -m "docs update" -a
          git push
